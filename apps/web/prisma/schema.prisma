generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model audit_logs {
  id        String   @id
  action    String
  entity    String
  entityId  String
  userId    String?
  metadata  Json?
  createdAt DateTime @default(now())

  @@index([action], map: "idx_audit_action")
  @@index([createdAt], map: "idx_audit_created")
  @@index([entity], map: "idx_audit_entity")
}

model blockchain_transactions {
  id              String         @id
  transactionHash String         @unique
  network         String
  blockNumber     Int?
  gasUsed         String?
  gasPrice        String?
  status          String         @default("pending")
  digitalTwinId   String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime
  digital_twins   digital_twins? @relation(fields: [digitalTwinId], references: [id])

  @@index([transactionHash], map: "idx_blockchain_tx_hash")
  @@index([network], map: "idx_blockchain_tx_network")
  @@index([status], map: "idx_blockchain_tx_status")
}

model certifications {
  id            String        @id
  name          String
  issuer        String
  issuedAt      DateTime
  expiresAt     DateTime?
  credentialUrl String?
  verified      Boolean       @default(false)
  digitalTwinId String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  digital_twins digital_twins @relation(fields: [digitalTwinId], references: [id])

  @@index([digitalTwinId], map: "idx_certifications_digital_twin")
  @@index([expiresAt], map: "idx_certifications_expires")
  @@index([verified], map: "idx_certifications_verified")
}

model digital_twins {
  id                      String                    @id
  name                    String
  description             String?
  blockchainAddress       String?
  soulboundTokenId        String?
  blockchainNetwork       String?
  status                  String                    @default("active")
  level                   Int                       @default(1)
  organizationId          String
  roleTemplateId          String
  assignedToDid           String
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime
  assignedTo              String?
  isEligibleForMint       Boolean                   @default(false)
  lastTrustCheck          DateTime?
  trustScore              Float?
  blockchain_transactions blockchain_transactions[]
  certifications          certifications[]
  organizations           organizations             @relation(fields: [organizationId], references: [id])
  role_templates          role_templates            @relation(fields: [roleTemplateId], references: [id])
  signals                 signals[]

  @@index([assignedToDid], map: "idx_digital_twins_assigned")
  @@index([blockchainAddress], map: "idx_digital_twins_blockchain")
  @@index([isEligibleForMint], map: "idx_digital_twins_eligible")
  @@index([organizationId], map: "idx_digital_twins_org")
  @@index([roleTemplateId], map: "idx_digital_twins_role")
  @@index([status], map: "idx_digital_twins_status")
  @@index([trustScore], map: "idx_digital_twins_trust")
}

model organization_members {
  id             String        @id
  organizationId String
  name           String
  email          String
  role           String
  isActive       Boolean       @default(true)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime
  organizations  organizations @relation(fields: [organizationId], references: [id])
}

model organizations {
  id                    String                  @id
  name                  String
  description           String?
  domain                String                  @unique
  createdAt             DateTime                @default(now())
  updatedAt             DateTime
  isActive              Boolean                 @default(true)
  onboardingComplete    Boolean                 @default(false)
  digital_twins         digital_twins[]
  organization_members  organization_members[]
  role_templates        role_templates[]
  role_trust_thresholds role_trust_thresholds[]

  @@index([isActive], map: "idx_organizations_active")
  @@index([domain], map: "idx_organizations_domain")
}

model role_templates {
  id                    String          @id
  title                 String
  focus                 String
  category              String
  selectable            Boolean         @default(true)
  responsibilities      Json
  securityContributions Json
  organizationId        String?
  createdAt             DateTime        @default(now())
  updatedAt             DateTime
  digital_twins         digital_twins[]
  organizations         organizations?  @relation(fields: [organizationId], references: [id])
}

model role_trust_thresholds {
  id             String        @id
  roleTitle      String
  minTrustScore  Float
  isActive       Boolean       @default(true)
  organizationId String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime
  organizations  organizations @relation(fields: [organizationId], references: [id])

  @@unique([organizationId, roleTitle])
  @@index([organizationId], map: "idx_role_threshold_org")
}

model signals {
  id            String        @id
  type          String
  title         String
  description   String?
  metadata      Json?
  value         Float?
  source        String
  verified      Boolean       @default(false)
  digitalTwinId String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime
  url           String?
  digital_twins digital_twins @relation(fields: [digitalTwinId], references: [id])

  @@index([digitalTwinId], map: "idx_signals_digital_twin")
  @@index([type], map: "idx_signals_type")
  @@index([verified], map: "idx_signals_verified")
}
